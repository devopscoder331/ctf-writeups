version: '3.8'

services:
  web:
    build: .
    ports:
      - "43180:8080"
    volumes:
      - ./app/uploads:/app/uploads
    environment:
      - SECRET_KEY=43dd54d9211e834b0
      - FLASK_ENV=development
      - ADMIN_EMAIL=admin@test.local
      - ADMIN_PASSWORD=admin
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/flask_db
      - FLAG=ctfzone{test}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: ./startup.sh

    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://127.0.0.1:8080/')"]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 30s

  celery:
    build: .
    volumes:
      - ./app/uploads:/app/uploads
      - ./model:/root/.cache/whisper
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/flask_db
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: celery -A celery_app.make_celery worker --loglevel=info

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=flask_db
    ports:
      - "5432:5432"    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:6
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
